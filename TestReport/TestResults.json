{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-19T08:59:41.246Z",
    "end": "2024-02-19T08:59:52.547Z",
    "duration": 11301,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "63c52aaf-faf3-45e0-93eb-f221457e2072",
      "title": "",
      "fullFile": "C:\\Users\\acer\\Desktop\\OrangeMochaPOM\\OrangeMochaPOM\\TestCases\\Sanitytest.js",
      "file": "\\TestCases\\Sanitytest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "141e0270-5bdd-4b92-a1aa-d4cf1d3c0236",
          "title": "Sanity Test",
          "fullFile": "C:\\Users\\acer\\Desktop\\OrangeMochaPOM\\OrangeMochaPOM\\TestCases\\Sanitytest.js",
          "file": "\\TestCases\\Sanitytest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3db915a9-b231-4a49-b943-0dbd434b447b",
              "title": "Login to the System",
              "fullFile": "C:\\Users\\acer\\Desktop\\OrangeMochaPOM\\OrangeMochaPOM\\TestCases\\Sanitytest.js",
              "file": "\\TestCases\\Sanitytest.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Login to the System\"",
                  "fullTitle": "Sanity Test Login to the System \"before each\" hook in \"Login to the System\"",
                  "timedOut": false,
                  "duration": 11248,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// create page objects\nsystemUtil = new SystemUtil();\nloginPage = new LoginPage(systemUtil.driver);\ndashboardPage = new DashboardPage(systemUtil.driver);\n//Open System\nawait systemUtil.openSystem();\n//Login to the System\nawait loginPage.successLogin(users.uName, users.uPassword);",
                  "err": {},
                  "uuid": "bcbf2907-74e8-41b8-a044-2436b9bd4081",
                  "parentUUID": "3db915a9-b231-4a49-b943-0dbd434b447b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"Login to the System\"",
                  "fullTitle": "Sanity Test Login to the System \"after each\" hook in \"Login to the System\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Close the system.\nawait SystemUtil.closeSystem();",
                  "err": {},
                  "uuid": "87482b0a-a00d-4d25-a870-e5cc2b7a4ec7",
                  "parentUUID": "3db915a9-b231-4a49-b943-0dbd434b447b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should log in successfully with valid credentials",
                  "fullTitle": "Sanity Test Login to the System should log in successfully with valid credentials",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Getting Dahsboard header text & store it to dashHeader variable.\nconst dashHeader = await dashboardPage.verifyDashboardHeader();\n//Check it's equal 'Employee Management'.\nassert.equal(dashHeader, 'Employee Management', 'Header text does not match the expected value.');",
                  "err": {},
                  "uuid": "6963efde-0c99-4cd8-a8a7-3b7d396c2c2f",
                  "parentUUID": "3db915a9-b231-4a49-b943-0dbd434b447b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6963efde-0c99-4cd8-a8a7-3b7d396c2c2f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 42,
              "root": false,
              "rootEmpty": false,
              "_timeout": 0
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "TestResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/acer/Desktop/OrangeMochaPOM/OrangeMochaPOM/TestReport",
        "reportFilename": "TestResults"
      },
      "version": "6.2.0"
    }
  }
}