{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-16T07:38:32.675Z",
    "end": "2024-02-16T07:38:44.056Z",
    "duration": 11381,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d5460788-583e-42bf-8d08-ef4102df9a3d",
      "title": "",
      "fullFile": "C:\\Users\\acer\\Desktop\\OrangeMochaPOM\\OrangeMochaPOM\\TestCases\\Sanitytest.js",
      "file": "\\TestCases\\Sanitytest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9774e2d6-7c11-4627-a8d4-51c673dce43c",
          "title": "Login Page Test",
          "fullFile": "C:\\Users\\acer\\Desktop\\OrangeMochaPOM\\OrangeMochaPOM\\TestCases\\Sanitytest.js",
          "file": "\\TestCases\\Sanitytest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Login Page Test\"",
              "fullTitle": "Login Page Test \"before each\" hook in \"Login Page Test\"",
              "timedOut": false,
              "duration": 11333,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create page objects\nsystemUtil = new SystemUtil();\nloginPage = new LoginPage(systemUtil.driver);\ndashboardPage = new DashboardPage(systemUtil.driver);\n//Open System\nawait systemUtil.openSystem();\n//Login to the System\nawait loginPage.successLogin(users.uName, users.uPassword);",
              "err": {},
              "uuid": "3d2fd3af-84c8-4277-91a9-b516d898d0e2",
              "parentUUID": "9774e2d6-7c11-4627-a8d4-51c673dce43c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login Page Test\"",
              "fullTitle": "Login Page Test \"after each\" hook in \"Login Page Test\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Close the system.\nawait SystemUtil.closeSystem();",
              "err": {},
              "uuid": "837e3a13-5c2e-44d8-9b65-f0c066620af6",
              "parentUUID": "9774e2d6-7c11-4627-a8d4-51c673dce43c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should log in successfully with valid credentials",
              "fullTitle": "Login Page Test should log in successfully with valid credentials",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Getting Dahsboard header text & store it to dashHeader variable.\nconst dashHeader = await dashboardPage.verifyDashboardHeader();\n//Check it's equal 'Employee Management'.\nassert.equal(dashHeader, 'Employee Management', 'Header text does not match the expected value.');",
              "err": {},
              "uuid": "12a12e2d-8b7c-4299-930a-be9d5671048c",
              "parentUUID": "9774e2d6-7c11-4627-a8d4-51c673dce43c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12a12e2d-8b7c-4299-930a-be9d5671048c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}